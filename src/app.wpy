<style lang="less">
// Global style write by less
// Build to dist/app.wxss
page {
  // display: flex;
  // flex-direction: column;
  height: 100%;
  width: 100%;
  overflow: hidden;
  background-color: #f9f9f9;
  font-family: -apple-system-font, 'Helvetica Neue', Helvetica, 'Microsoft YaHei', sans-serif;
}

.container {
  display: flex;
  flex-direction: column;
  box-sizing: border-box;
  height: 100%;
}

</style>

<script>
import wepy from 'wepy';
import 'wepy-async-function';

export default class extends wepy.app {
  config = {
    pages: [
      'pages/splash',
      'pages/board',
      'pages/search',
      'pages/profile'
    ],
    window: {
      // 下拉背景字体、loading 图的样式，仅支持 dark/light
      backgroundTextStyle: 'light',
      // 导航栏背景颜色，如"#000000"
      navigationBarBackgroundColor: '#35495e',
      // 导航栏标题文字内容
      navigationBarTitleText: '八哥影评',
      // 导航栏标题颜色，仅支持 black/white
      navigationBarTextStyle: 'white',
      // 窗口的背景色
      backgroundColor: '#000000',
      // 是否开启下拉刷新，详见页面相关事件处理函数
      enablePullDownRefresh: false
    },
    tabBar: {
      color: '#999999',
      selectedColor: '#35495e',
      borderStyle: 'white',
      backgroundColor: '#f5f5f5',
      list: [
        {
          text: '榜单',
          pagePath: 'pages/board',
          iconPath: 'images/board.png',
          selectedIconPath: 'images/board-actived.png'
        },
        {
          text: '搜索',
          pagePath: 'pages/search',
          iconPath: 'images/search.png',
          selectedIconPath: 'images/search-actived.png'
        },
        {
          text: '我的',
          pagePath: 'pages/profile',
          iconPath: 'images/profile.png',
          selectedIconPath: 'images/profile-actived.png'
        }
      ]
    },
    // Network timeout configuration
    networkTimeout: {
      request: 10000,
      downloadFile: 10000
    },
    // Debug log to console
    debug: true
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super();
    this.use('requestfix');
    this.use('promisify');
  }
}
</script>
